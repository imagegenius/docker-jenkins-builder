---
#######################
#   Set UID and GID   #
#######################

- name: set UID
  when: lookup('env', 'PUID')
  user:
    name: abc
    non_unique: yes
    uid: "{{ lookup('env', 'PUID') | int }}"
- name: set UID
  when: lookup('env', 'PGID')
  group:
    name: abc
    non_unique: yes
    gid: "{{ lookup('env', 'PGID') | int }}"

######################################
#   Grab the Variables from github   #
######################################
- name: Clone git repository
  git:
    repo: "https://github.com/{{ github_user }}/docker-{{ container_name }}.git"
    dest: "/tmp/docker-{{ container_name }}"
    version: "{{ github_branch }}"

- name: Move templated variables
  when: lookup('env', 'LOCAL') != "true"
  copy:
    src: "/tmp/docker-{{ container_name }}/{{ item }}"
    dest: "/tmp/{{ item }}"
  loop: "{{ templated_vars }}"


- name: include var files for this project
  include_vars:
    file: "/tmp/{{ item }}"
  loop: "{{  templated_vars  }}"

- name: include template loop variables
  include_vars:
    file: "/ansible/roles/generate-jenkins/templates.yml"

############################
#   Directory Management   #
############################
- name: create destination dir for generated Jenkinsfile
  when: lookup('env', 'LOCAL') != "true"
  file:
    path: "jenkins/{{ project_repo_name }}"
    state: directory
    owner: "abc"
    group: "abc"

- name: create destination dir for generated github files
  when: lookup('env', 'LOCAL') == "true"
  file:
    path: "/tmp/.github"
    state: directory
    owner: "abc"
    group: "abc"

- name: create destination dir for generated github files
  when: lookup('env', 'LOCAL') != "true"
  file:
    path: "jenkins/{{ project_repo_name }}/.github"
    state: directory
    owner: "abc"
    group: "abc"

- name: create destination dir for generated github workflow files
  when: lookup('env', 'LOCAL') == "true"
  file:
    path: "/tmp/.github/workflows"
    state: directory
    owner: "abc"
    group: "abc"

- name: create destination dir for generated github workflow files
  when: lookup('env', 'LOCAL') != "true"
  file:
    path: "jenkins/{{ project_repo_name }}/.github/workflows"
    state: directory
    owner: "abc"
    group: "abc"

- name: create destination dir for generated donate.txt
  when:
    - lookup('env', 'LOCAL') == "true"
    - sponsor_links is defined
  file:
    path: "/tmp/root"
    state: directory
    owner: "abc"
    group: "abc"

- name: create destination dir for generated donate.txt
  when:
    - lookup('env', 'LOCAL') != "true"
    - sponsor_links is defined
  file:
    path: "jenkins/{{ project_repo_name }}/root"
    state: directory
    owner: "abc"
    group: "abc"

- name: create destination dir for generated 99-deprecation
  when:
    - lookup('env', 'LOCAL') == "true"
    - project_deprecation_status == true
  file:
    path: "/tmp/root/etc/cont-init.d"
    state: directory
    owner: "abc"
    group: "abc"

- name: create destination dir for generated 99-deprecation
  when:
    - lookup('env', 'LOCAL') != "true"
    - project_deprecation_status == true
  file:
    path: "jenkins/{{ project_repo_name }}/root/etc/cont-init.d"
    state: directory
    owner: "abc"
    group: "abc"

- name: create destination dir for generated external files
  when:
    - lookup('env', 'LOCAL') == "true"
  file:
    path: "/tmp/.jenkins-external"
    state: directory
    owner: "abc"
    group: "abc"

- name: create destination dir for generated external files
  when:
    - lookup('env', 'LOCAL') != "true"
  file:
    path: "jenkins/{{ project_repo_name }}/.jenkins-external"
    state: directory
    owner: "abc"
    group: "abc"

- name: Create symbolic link for legacy pathing
  when: lookup('env', 'LOCAL') != "true"
  shell: "ln -s {{ project_repo_name }} {{ project_name }}"
  args:
    chdir: /ansible/jenkins

##############################
#   Loop Through Templates   #
##############################

# Normal Files
- name: write templates
  when:
    - lookup('env', 'LOCAL') != "true"
    - item.readme is not defined
    - item.donate is not defined
    - item.deprecation is not defined
    - item.unraid_template is not defined
    - item.package_trigger is not defined
    - item.external_trigger is not defined
  template:
    src: "../templates/{{ item.src }}"
    dest: "jenkins/{{ project_repo_name }}/{{ item.dest }}"
    owner: "abc"
    group: "abc"
  delegate_to: localhost
  loop: "{{  templated_files  }}"

- name: write templates local
  when:
    - lookup('env', 'LOCAL') == "true"
    - item.readme is not defined
    - item.donate is not defined
    - item.deprecation is not defined
    - item.unraid_template is not defined
    - item.package_trigger is not defined
    - item.external_trigger is not defined
  template:
    src: "../templates/{{ item.src }}"
    dest: "/tmp/{{ item.dest }}"
    owner: "abc"
    group: "abc"
  delegate_to: localhost
  loop: "{{  templated_files  }}"

# Readme templating

- name: write readme normal
  when:
    - lookup('env', 'LOCAL') != "true"
    - item.readme is defined
    - full_custom_readme is not defined
  template:
    src: "../templates/{{ item.src }}"
    dest: "jenkins/{{ project_repo_name }}/{{ item.dest }}"
    owner: "abc"
    group: "abc"
  delegate_to: localhost
  loop: "{{  templated_files  }}"

- name: write readme normal local
  when:
    - lookup('env', 'LOCAL') == "true"
    - item.readme is defined
    - full_custom_readme is not defined
  template:
    src: "../templates/{{ item.src }}"
    dest: "/tmp/{{ item.dest }}"
    owner: "abc"
    group: "abc"
  delegate_to: localhost
  loop: "{{  templated_files  }}"

- name: write readme full custom
  when:
    - lookup('env', 'LOCAL') != "true"
    - item.readme is defined
    - full_custom_readme is defined
  template:
    src: "../templates/{{ item.src }}-CUSTOM"
    dest: "jenkins/{{ project_repo_name }}/{{ item.dest }}"
    owner: "abc"
    group: "abc"
  delegate_to: localhost
  loop: "{{  templated_files  }}"

- name: write readme full custom local
  when:
    - lookup('env', 'LOCAL') == "true"
    - item.readme is defined
    - full_custom_readme is defined
  template:
    src: "../templates/{{ item.src }}-CUSTOM"
    dest: "/tmp/{{ item.dest }}"
    owner: "abc"
    group: "abc"
  delegate_to: localhost
  loop: "{{  templated_files  }}"

# Donation links templating

- name: write donation links
  when:
    - lookup('env', 'LOCAL') != "true"
    - item.donate is defined
    - sponsor_links is defined
  template:
    src: "../templates/{{ item.src }}"
    dest: "jenkins/{{ project_repo_name }}/{{ item.dest }}"
    owner: "abc"
    group: "abc"
  delegate_to: localhost
  loop: "{{  templated_files  }}"

- name: write donation links local
  when:
    - lookup('env', 'LOCAL') == "true"
    - item.donate is defined
    - sponsor_links is defined
  template:
    src: "../templates/{{ item.src }}"
    dest: "/tmp/{{ item.dest }}"
    owner: "abc"
    group: "abc"
  delegate_to: localhost
  loop: "{{  templated_files  }}"

# Deprecation init script templating

- name: write deprecation init script
  when:
    - lookup('env', 'LOCAL') != "true"
    - item.deprecation is defined
    - project_deprecation_status == true
  template:
    src: "../templates/{{ item.src }}"
    dest: "jenkins/{{ project_repo_name }}/{{ item.dest }}"
    owner: "abc"
    group: "abc"
  delegate_to: localhost
  loop: "{{  templated_files  }}"

- name: write deprecation init script local
  when:
    - lookup('env', 'LOCAL') == "true"
    - item.deprecation is defined
    - project_deprecation_status == true
  template:
    src: "../templates/{{ item.src }}"
    dest: "/tmp/{{ item.dest }}"
    owner: "abc"
    group: "abc"
  delegate_to: localhost
  loop: "{{  templated_files  }}"

# Unraid template templating

- name: write Unraid template
  when:
    - lookup('env', 'LOCAL') != "true"
    - unraid_template
    - item.unraid_template is defined
    - full_custom_readme is not defined
    - '"baseimage" not in project_name'
    - '"jenkins-builder" not in project_name'
  template:
    src: "../templates/{{ item.src }}"
    dest: "jenkins/{{ project_repo_name }}/{{ item.dest }}"
    owner: "abc"
    group: "abc"
  delegate_to: localhost
  loop: "{{  templated_files  }}"

- name: write Unraid template local
  when:
    - lookup('env', 'LOCAL') == "true"
    - unraid_template
    - item.unraid_template is defined
    - full_custom_readme is not defined
    - '"baseimage" not in project_name'
    - '"jenkins-builder" not in project_name'
  template:
    src: "../templates/{{ item.src }}"
    dest: "/tmp/{{ item.dest }}"
    owner: "abc"
    group: "abc"
  delegate_to: localhost
  loop: "{{  templated_files  }}"

# Package trigger templating

- name: write package trigger
  when:
    - lookup('env', 'LOCAL') != "true"
    - item.package_trigger is defined
    - custom_package_trigger != true
  template:
    src: "../templates/{{ item.src }}"
    dest: "jenkins/{{ project_repo_name }}/{{ item.dest }}"
    owner: "abc"
    group: "abc"
  delegate_to: localhost
  loop: "{{  templated_files  }}"

- name: write package trigger local
  when:
    - lookup('env', 'LOCAL') == "true"
    - item.package_trigger is defined
    - custom_package_trigger != true
  template:
    src: "../templates/{{ item.src }}"
    dest: "/tmp/{{ item.dest }}"
    owner: "abc"
    group: "abc"
  delegate_to: localhost
  loop: "{{  templated_files  }}"

# External trigger templating

- name: write external trigger
  when:
    - lookup('env', 'LOCAL') != "true"
    - item.external_trigger is defined
    - custom_external_trigger != true
  template:
    src: "../templates/{{ item.src }}"
    dest: "jenkins/{{ project_repo_name }}/{{ item.dest }}"
    owner: "abc"
    group: "abc"
  delegate_to: localhost
  loop: "{{  templated_files  }}"

- name: write external trigger local
  when:
    - lookup('env', 'LOCAL') == "true"
    - item.external_trigger is defined
    - custom_external_trigger != true
  template:
    src: "../templates/{{ item.src }}"
    dest: "/tmp/{{ item.dest }}"
    owner: "abc"
    group: "abc"
  delegate_to: localhost
  loop: "{{  templated_files  }}"

##########################################
#  For build nodes not running as Root   #
##########################################
- name: Allow non root host to delete temp files
  when:
    - lookup('env', 'LOCAL') != "true"
  command: chmod -R 777 /ansible/jenkins
  delegate_to: localhost
